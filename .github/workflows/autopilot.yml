name: Legal Video Auto-Generation System

on:
  schedule:
    - cron: '30 9 * * *'        # 3:00 PM IST (9:30 AM UTC)
  workflow_dispatch:

jobs:
  generate-video:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'   # your script runs fine on 3.10

      - name: Install system dependencies (ffmpeg + fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu-core fonts-dejavu-extra
          ffmpeg -version
          which ffmpeg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # If you later add a requirements.txt, prefer it:
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Your stated deps (pinned where you pinned them)
            pip install \
              requests>=2.31.0 \
              pillow \
              moviepy==1.0.3 \
              imageio==2.34.0 \
              imageio-ffmpeg==0.4.9 \
              gTTS==2.5.1 \
              pydub==0.25.1 \
              openai>=1.30.0 \
              numpy
          fi
          python -c "import sys; print('Python', sys.version)"
          python -c "import PIL,requests; print('Pillow', PIL.__version__)"

      - name: Preflight ffmpeg smoke test
        run: |
          set -e
          echo "Encoding a 1s dummy clip to verify ffmpeg works..."
          ffmpeg -y -f lavfi -i color=size=320x240:rate=30:duration=1:color=black \
                 -c:v libx264 -preset veryfast -crf 30 -pix_fmt yuv420p ffprobe_test.mp4
          ls -lh ffprobe_test.mp4

      - name: Run autopilot
        env:
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Normalize secrets in case of stray newlines (seen in your logs)
          export TELEGRAM_BOT_TOKEN="$(printf "%s" "${TELEGRAM_BOT_TOKEN}" | tr -d '\r' | tr -d '\n')"
          export TELEGRAM_CHAT_ID="$(printf "%s" "${TELEGRAM_CHAT_ID}" | tr -d '\r' | tr -d '\n')"
          export HF_API_KEY="$(printf "%s" "${HF_API_KEY}" | tr -d '\r' | tr -d '\n')"
          export OPENAI_API_KEY="$(printf "%s" "${OPENAI_API_KEY}" | tr -d '\r' | tr -d '\n')"

          echo "Files in repo:"
          ls -la

          echo "Running autopilot.py ..."
          python -u autopilot.py

      - name: List generated files
        if: always()
        run: |
          echo "Generated files:"
          ls -la *.mp4 *.json *.txt 2>/dev/null || echo "No output files found"

      - name: Upload generated content
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: legal-video-content-${{ github.run_number }}
          path: |
            *.mp4
            *.json
            *.txt
          if-no-files-found: warn
